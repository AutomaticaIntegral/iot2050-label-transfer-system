#!/bin/bash
# SCRIPT DE LIMPIEZA BASADO EN IOT ADISSEO EN PRODUCCI√ìN
# Fecha: $(date)
# Problema detectado: Archivos duplicados causando sincronizaci√≥n RFID alternada

echo "üîç INICIANDO LIMPIEZA BASADA EN AN√ÅLISIS IOT PRODUCCI√ìN"
echo "Problema: Sincronizaci√≥n RFID alternada causada por archivos conflictivos"
echo ""

# 1. CREAR RESPALDO DE SEGURIDAD
echo "üì¶ Creando respaldo de seguridad..."
tar -czf cleanup-production-backup-$(date +%Y%m%d-%H%M%S).tar.gz \
  plc-server.js \
  src/servers/plc-server.jsX8103306s.Iot \
  zpl-utils.js \
  debug-*.js \
  test-*.js \
  quick-*.js \
  simulate-*.js \
  tests/ \
  labels.json \
  counter.json \
  process.log \
  config/ 2>/dev/null

echo "‚úÖ Respaldo creado"

# 2. ELIMINAR ARCHIVOS CR√çTICOS PROBLEM√ÅTICOS
echo ""
echo "üö® ELIMINANDO ARCHIVOS CR√çTICOS PROBLEM√ÅTICOS..."

# Archivos que causan el problema de sincronizaci√≥n RFID
if [ -f "plc-server.js" ]; then
    echo "üóëÔ∏è Eliminando plc-server.js (ra√≠z) - imports incorrectos"
    rm plc-server.js
fi

if [ -f "src/servers/plc-server.jsX8103306s.Iot" ]; then
    echo "üóëÔ∏è Eliminando plc-server.jsX8103306s.Iot - funci√≥n RFID incorrecta"
    rm src/servers/plc-server.jsX8103306s.Iot
fi

if [ -f "zpl-utils.js" ]; then
    echo "üóëÔ∏è Eliminando zpl-utils.js (ra√≠z) - duplicado obsoleto"
    rm zpl-utils.js
fi

# 3. ELIMINAR ARCHIVOS DE DEBUG/TESTING
echo ""
echo "üßπ ELIMINANDO ARCHIVOS DE DEBUG/TESTING..."
rm -f debug-*.js test-*.js quick-*.js simulate-*.js
rm -rf tests/ 2>/dev/null

# 4. ELIMINAR DUPLICADOS Y TEMPORALES
echo ""
echo "üìÅ ELIMINANDO ARCHIVOS DUPLICADOS Y TEMPORALES..."
rm -f labels.json counter.json process.log
rm -rf config/ 2>/dev/null

# 5. VERIFICACI√ìN POST-LIMPIEZA
echo ""
echo "üîç VERIFICACI√ìN POST-LIMPIEZA..."
echo "Archivos plc-server restantes:"
find . -name "*plc-server*" -type f 2>/dev/null

echo ""
echo "Archivos zpl-utils restantes:"
find . -name "*zpl-utils*" -type f 2>/dev/null

echo ""
echo "Verificando integridad del sistema:"
if [ -f "src/servers/plc-server.js" ] && [ -f "src/utils/zpl-utils.js" ]; then
    echo "‚úÖ Archivos correctos presentes"
else
    echo "‚ùå ERROR: Archivos cr√≠ticos faltantes"
    exit 1
fi

# 6. VERIFICAR FUNCI√ìN RFID CORRECTA
echo ""
echo "üîß VERIFICANDO FUNCI√ìN RFID CORRECTA..."
if grep -q "updateCounterAndRfidMemory" src/servers/plc-server.js; then
    echo "‚úÖ Funci√≥n RFID correcta presente: updateCounterAndRfidMemory"
else
    echo "‚ùå ERROR: Funci√≥n RFID correcta no encontrada"
fi

if grep -q "updateCounterInZpl.*normalizedCounter" src/servers/plc-server.js; then
    echo "‚ö†Ô∏è WARNING: Funci√≥n RFID incorrecta a√∫n presente: updateCounterInZpl"
else
    echo "‚úÖ Funci√≥n RFID incorrecta eliminada"
fi

echo ""
echo "üéØ LIMPIEZA COMPLETADA"
echo "Resultado esperado: Problema de sincronizaci√≥n RFID alternada resuelto"
echo "Archivos conservados: Solo los necesarios para producci√≥n"
echo ""
echo "‚ö†Ô∏è IMPORTANTE: Reiniciar el servicio despu√©s de la limpieza:"
echo "sudo systemctl restart tcp-label-transfer" 